% List operations
% Brian Heim
% 2017-07-22

% reverse a list
rev(In, Out) :-
  rev(In, [], Out).

rev([], Out, Out).
rev([InHead|InTail], Accum, Out) :-
  rev(InTail, [InHead|Accum], Out).

% minimum of a list

% min(list, temp, min).
min([H|T], Min) :-
  min(T, H, Min).

min([], Min, Min).
min([H|T], Min0, Min) :-
  Min1 is min(H, Min0),
  min(T, Min1, Min).

% max(list, temp, max).
max([H|T], Max) :-
  max(T, H, Max).

max([], Max, Max).
max([H|T], Max0, Max) :-
  Max1 is max(H, Max0),
  max(T, Max1, Max).

% sorting
part4(_, [], [], []).
part4(Pivot, [H|T], [H|Ls], R) :-
  H < Pivot,
  part4(Pivot, T, Ls, R).
part4(Pivot, [H|T], L, [H|Rs]) :-
  H >= Pivot,
  part4(Pivot, T, L, Rs).

my_sort([], []).
my_sort([Pivot|InTail], Out) :-
  part4(Pivot, InTail, Left, Right),
  my_sort(Left, SortedLeft),
  my_sort(Right, SortedRight),
  append(SortedLeft, [Pivot|SortedRight], Out).

part6(_, [], Left, Right, Left, Right).
part6(Pivot, [H|T], Left, Right, L, R) :-
  H < Pivot,
  part6(Pivot, T, [H|Left], Right, L, R).

part6(Pivot, [H|T], Left, Right, L, R) :-
  H >= Pivot,
  part6(Pivot, T, Left, [H|Right], L, R).
% 
% my_sort([], Out, Out).
% my_sort([InHead|InTail], Accum, Out) :-
%   my_partition(InHead, InTail, Left, Right, Result),
%   my_sort(Left, SortedLeft),
%   my_sort(Right, SortedRight),
% 
% 
% my_sort([], Out, Out).
% my_sort([H|[N|T]], Accum, Out) :-
%   H < N,
%   my_sort([N|T], [H|Accum], Out).
% 
% my_sort([H|[N|T]], Accum, Out) :-
%   H >= N,
%   my_sort([H|T], [N|Accum], Out).

% min([Only|[]], Only).
% min([H|[N|T]], H) :-
%   H < N,
%   min([N|T], H).
%
% min([H|[N|T]], N) :-
%   N >= H,
%   min([N|T], N).
%
% min([H|[N|T]], Min) :-
%   Min < H,
%   Min < N,
%   min([N|T], Min).
%
